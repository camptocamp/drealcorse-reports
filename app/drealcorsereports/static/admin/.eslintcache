[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3","/app/src/components/report-model-list.component.js":"4","/app/src/components/report-model.component.js":"5","/app/src/services/report-model.service.js":"6","/app/src/http-common.js":"7","/app/src/components/add-report-model.component.js":"8"},{"size":544,"mtime":1611310333553,"results":"9","hashOfConfig":"10"},{"size":1485,"mtime":1611310333553,"results":"11","hashOfConfig":"10"},{"size":364,"mtime":1610723137429,"results":"12","hashOfConfig":"10"},{"size":3983,"mtime":1611310333553,"results":"13","hashOfConfig":"10"},{"size":3621,"mtime":1611310333553,"results":"14","hashOfConfig":"10"},{"size":446,"mtime":1611310333553,"results":"15","hashOfConfig":"10"},{"size":139,"mtime":1611310333553,"results":"16","hashOfConfig":"10"},{"size":2566,"mtime":1611310333553,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jbi4wm",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/app/src/index.js",[],"/app/src/App.js",[],["36","37"],"/app/src/reportWebVitals.js",[],"/app/src/components/report-model-list.component.js",["38"],"import React, { Component } from \"react\";\nimport ReportModelApiService from \"../services/report-model.service\";\nimport ReportModel from \"./report-model.component\";\n\nexport default class ReportModelList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveReportModels = this.retrieveReportModels.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveReportModel = this.setActiveReportModel.bind(this);\n    this.onUpdateReportModel = this.onUpdateReportModel.bind(this);\n    // this.searchTitle = this.searchTitle.bind(this);\n\n    this.state = {\n      reportModels: [],\n      currentReportModel: null,\n      currentIndex: -1,\n      searchTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveReportModels();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  retrieveReportModels() {\n    ReportModelApiService.getAll()\n      .then(response => {\n        this.setState({\n          reportModels: response.data\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveReportModels();\n    this.setState({\n      currentReportModel: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveReportModel(reportModel, index) {\n    this.setState({\n      currentReportModel: reportModel,\n      currentIndex: index\n    });\n  }\n\n  onUpdateReportModel(updatedReportModel) {\n    this.setState(prevState => ({\n      reportModels: prevState.reportModels.map((reportModel) => {\n        if (reportModel.id === updatedReportModel.id) {\n          return updatedReportModel;\n        } else {\n          return reportModel\n        }\n      })\n    }))\n  }\n\n  // TODO: add client side filtering\n  // searchTitle() {\n  //   ReportModelApiService.findByTitle(this.state.searchTitle)\n  //     .then(response => {\n  //       this.setState({\n  //         reportModels: response.data\n  //       });\n  //       console.log(response.data);\n  //     })\n  //     .catch(e => {\n  //       console.log(e);\n  //     });\n  // }\n\n  render() {\n    const { searchTitle, reportModels, currentReportModel, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        {/* <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              value={searchTitle}\n              onChange={this.onChangeSearchTitle}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchTitle}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div> */}\n        <div className=\"col-md-6\">\n          <h4>Report Model List</h4>\n\n          <ul className=\"list-group\">\n            {reportModels &&\n              reportModels.map((reportModel, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveReportModel(reportModel, index)}\n                  key={index}\n                >\n                  {reportModel.title}\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className=\"col-md-6\">\n          {/* TODO: add a button to add a model via edit component or add component */}\n          {/* <button\n            onClick={() => this.setActiveReportModel({\n              id: null,\n              title: \"\",\n              layer: \"\"\n            }, -1)}\n            className=\"badge badge-warning m-1\">\n              Add Report Model\n          </button> */}\n          {currentReportModel ? (\n            <ReportModel currentReportModel={currentReportModel} onUpdateReportModel={this.onUpdateReportModel}/>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Report Model...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/app/src/components/report-model.component.js",[],"/app/src/services/report-model.service.js",[],"/app/src/http-common.js",[],"/app/src/components/add-report-model.component.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":89,"column":13,"nodeType":"45","messageId":"46","endLine":89,"endColumn":24},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'searchTitle' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]